{"version":3,"sources":["components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","root","width","height","display","flexDirection","alignItems","formSection","flexGrow","justifyContent","boxSizing","padding","spacing","stepperSection","stepper","buttonsSection","useStepStyle","props","backgroundColor","isCompleted","fade","palette","success","dark","isActive","paddingLeft","stepNumberContainer","stepLabelContainer","stepLabel","fontWeight","stepNumber","SettingsStep","stepInfo","classes","className","Typography","variant","number","label","useProfileFormStyle","paddingTop","input","margin","CreateProfileForm","defaultValues","getValuesForSubmit","React","useState","first_name","last_name","internalValues","setInternalValues","handleChange","event","target","name","value","useEffect","color","TextField","fullWidth","onChange","useFacilityFormStyle","inputContainer_80_20","input_60_percent","input_30_percent","grow","flexFlow","CreateFacilityForm","business_name","country","state","localoty","street1","street2","street_number","category","Form","activeStep","setActiveStep","completedStep","setCompletedStep","profileFormValues","setProfileFormValues","facilityFormValues","setFacilityFormValues","map","step","index","includes","values","Button","onClick","prevStep","newCompleteState","push","nextStep","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3b9a930.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  fade,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  formSection: {\r\n    width: \"100%\",\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    boxSizing: \"border-box\",\r\n    padding: theme.spacing(0, 2, 2, 2),\r\n  },\r\n  stepperSection: {\r\n    width: \"100%\",\r\n    height: \"15%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    boxSizing: \"border-box\",\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  stepper: {\r\n    width: \"100%\",\r\n  },\r\n  buttonsSection: {\r\n    width: \"100%\",\r\n    height: \"10%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"flex-end\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n}));\r\n\r\nconst useStepStyle = makeStyles((theme) => ({\r\n  root: (props) => ({\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: props.isCompleted\r\n      ? fade(theme.palette.success.dark, 0.2)\r\n      : props.isActive\r\n      ? fade(\"#BAD2EE\", 0.5)\r\n      : fade(\"#EDF3FB\", 0.8),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    boxSizing: \"border-box\",\r\n    paddingLeft: theme.spacing(2),\r\n  }),\r\n  stepNumberContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  stepLabelContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n\r\n    alignItems: \"flex-start\",\r\n  },\r\n  stepLabel: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  stepNumber: {},\r\n}));\r\n\r\nfunction SettingsStep({ isActive, isCompleted, stepInfo }) {\r\n  const props = { isActive: isActive, isCompleted: isCompleted };\r\n  const classes = useStepStyle(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.stepNumberContainer}>\r\n        <Typography className={classes.stepNumber} variant=\"overline\">\r\n          PASO 0{stepInfo.number}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.stepLabelContainer}>\r\n        <div>\r\n          <Typography className={classes.stepLabel} variant=\"caption\">\r\n            {stepInfo?.label}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useProfileFormStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    boxSizing: \"border-box\",\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(2, 0, 1, 0),\r\n  },\r\n}));\r\n\r\nfunction CreateProfileForm({ defaultValues, getValuesForSubmit }) {\r\n  const classes = useProfileFormStyle();\r\n  const [internalValues, setInternalValues] = React.useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (defaultValues) {\r\n      setInternalValues(defaultValues);\r\n    }\r\n  }, [setInternalValues]);\r\n\r\n  function handleChange(event) {\r\n    setInternalValues({\r\n      ...internalValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getValuesForSubmit(internalValues);\r\n  }, [internalValues]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography color=\"primary\" variant=\"h6\">\r\n        Cuentanos un poco sobre ti\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        Agrega la informacion basica de tu perfil\r\n      </Typography>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className={classes.input}\r\n        fullWidth\r\n        label=\"Nombres(s)\"\r\n        value={internalValues.first_name}\r\n        onChange={handleChange}\r\n        name=\"first_name\"\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className={classes.input}\r\n        fullWidth\r\n        label=\"Apellido(s)\"\r\n        value={internalValues.last_name}\r\n        onChange={handleChange}\r\n        name=\"last_name\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useFacilityFormStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    boxSizing: \"border-box\",\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1, 0, 1, 0),\r\n  },\r\n  inputContainer_80_20: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    margin: theme.spacing(1, 0, 1, 0),\r\n    justifyContent: \"space-around\",\r\n  },\r\n  input_60_percent: {\r\n    width: \"65%\",\r\n  },\r\n  input_30_percent: {\r\n    width: \"30%\",\r\n  },\r\n  grow: {\r\n    flexFlow: 1,\r\n  },\r\n}));\r\n\r\nfunction CreateFacilityForm({ defaultValues, getValuesForSubmit }) {\r\n  const classes = useFacilityFormStyle();\r\n  const [internalValues, setInternalValues] = React.useState({\r\n    business_name: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    localoty: \"\",\r\n    street1: \"\",\r\n    street2: \"\",\r\n    street_number: \"\",\r\n    category: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (defaultValues) {\r\n      setInternalValues(defaultValues);\r\n    }\r\n  }, [setInternalValues]);\r\n\r\n  function handleChange(event) {\r\n    setInternalValues({\r\n      ...internalValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getValuesForSubmit(internalValues);\r\n  }, [internalValues]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography color=\"primary\" variant=\"h6\">\r\n        Hablanos sobre tu negocio\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        Agrega la informacion basica de tu negocio\r\n      </Typography>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className={classes.input}\r\n        fullWidth\r\n        label=\"Nombre de tu negocio\"\r\n        value={internalValues.business_name}\r\n        onChange={handleChange}\r\n        name=\"business_name\"\r\n      />\r\n      <div className={classes.inputContainer_80_20}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className={classes.input_60_percent}\r\n          fullWidth\r\n          label=\"Calle\"\r\n          value={internalValues.street1}\r\n          onChange={handleChange}\r\n          name=\"street1\"\r\n        />\r\n        <div className={classes.grow} />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className={classes.input_30_percent}\r\n          fullWidth\r\n          label=\"Número\"\r\n          value={internalValues.number}\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n        />\r\n      </div>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className={classes.input}\r\n        fullWidth\r\n        label=\"Fraccionamiento\"\r\n        value={internalValues.street2}\r\n        onChange={handleChange}\r\n        name=\"street2\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Form() {\r\n  const classes = useStyle();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const [completedStep, setCompletedStep] = React.useState([]);\r\n  const [profileFormValues, setProfileFormValues] = React.useState(null);\r\n  const [facilityFormValues, setFacilityFormValues] = React.useState(null);\r\n\r\n  function nextStep(activeStep) {\r\n    if (activeStep === 1) {\r\n      let newCompleteState = completedStep;\r\n      newCompleteState.push(activeStep);\r\n      setCompletedStep(newCompleteState);\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  }\r\n\r\n  function prevStep(activeStep) {\r\n    if (activeStep === 1) {\r\n      return;\r\n    }\r\n    setActiveStep(activeStep - 1);\r\n\r\n    setCompletedStep([]);\r\n  }\r\n\r\n  // // If the user already have a user profile, go to the next form.\r\n  // React.useEffect(() => {\r\n  //   if (\r\n  //     auth.user.userprofile.first_name !== \"\" &&\r\n  //     auth.user.userprofile.last_name !== \"\"\r\n  //   ) {\r\n  //     setActiveStep(1);\r\n  //   }\r\n  // }, [auth.user.userprofile.first_name, auth.user.userprofile.last_name]);\r\n  const steps = [\r\n    {\r\n      number: 1,\r\n      label: \"Registrar negocio\",\r\n    },\r\n    {\r\n      number: 2,\r\n      label: \"Registra tu perfil\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.stepperSection}>\r\n        {steps.map((step, index) => {\r\n          return (\r\n            <SettingsStep\r\n              key={index}\r\n              stepInfo={step}\r\n              isActive={step.number === activeStep}\r\n              isCompleted={completedStep.includes(step.number)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={classes.formSection}>\r\n        {activeStep === 1 && (\r\n          <CreateProfileForm\r\n            defaultValues={profileFormValues}\r\n            getValuesForSubmit={(values) => setProfileFormValues(values)}\r\n          />\r\n        )}\r\n        {activeStep === 2 && (\r\n          <CreateFacilityForm\r\n            defaultValues={facilityFormValues}\r\n            getValuesForSubmit={(values) => setFacilityFormValues(values)}\r\n          />\r\n        )}\r\n\r\n        <div className={classes.buttonsSection}>\r\n          {activeStep === 2 && (\r\n            <Button onClick={() => prevStep(activeStep)}>Anterior</Button>\r\n          )}\r\n          <Button color=\"primary\" onClick={() => nextStep(activeStep)}>\r\n            {activeStep > 1 ? \"Terminar\" : \"Siguiente\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nfunction App() {\n  return (\n    <div className=\"root\">\n      <div className=\"appbar\"></div>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}